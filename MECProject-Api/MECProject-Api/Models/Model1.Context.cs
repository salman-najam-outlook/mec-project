//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MECProject_Api.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MECProjectDBEntities : DbContext
    {
        public MECProjectDBEntities()
            : base("name=MECProjectDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Complaint> Complaints { get; set; }
        public virtual DbSet<Income> Incomes { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<Service_Category> Service_Category { get; set; }
        public virtual DbSet<Shopkeeper> Shopkeepers { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<OrdertrackingNumber_Result> OrdertrackingNumber(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OrdertrackingNumber_Result>("OrdertrackingNumber", dateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GetOrderCountByStatus(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GetOrderCountByStatus", userIdParameter);
        }
    
        public virtual ObjectResult<sp_getOrdersComplaint_Result> sp_getOrdersComplaint(string status, Nullable<int> userId)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getOrdersComplaint_Result>("sp_getOrdersComplaint", statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_GetOrdersGrid_Result> sp_GetOrdersGrid(string status, Nullable<int> userId)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOrdersGrid_Result>("sp_GetOrdersGrid", statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_OrdersPayment(string status, Nullable<int> userId)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_OrdersPayment", statusParameter, userIdParameter);
        }
    
        public virtual ObjectResult<sp_OrdersPaymentByUsers_Result> sp_OrdersPaymentByUsers(string status, string userId)
        {
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrdersPaymentByUsers_Result>("sp_OrdersPaymentByUsers", statusParameter, userIdParameter);
        }
    }
}
